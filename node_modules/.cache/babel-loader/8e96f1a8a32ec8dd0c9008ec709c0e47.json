{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADM\\\\Desktop\\\\zip\\\\projetoFakeApi-reactJS (2)\\\\src\\\\componentes\\\\Editproduto.js\";\nimport React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Layout from \"./LayoutAdmin\";\nimport FormProduct from \"./FormProduct\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditProduto extends React.Component {\n  //criando configuraçoes\n  constructor(props) {\n    super(props);\n\n    this.update = e => {\n      e.preventDefault();\n\n      if (this.state.name === \"\" || this.state.price === \"\") {\n        alert(\"Os dois primeiros campos são obrigatórios\");\n        return;\n      } //mostrar dados organizados quando adicionado\n\n\n      this.props.updateProduto(this.state); //limpando informacoes depois de adicionado\n\n      this.setState({\n        name: \"\",\n        price: \"\",\n        size: \"\",\n        color: \"\",\n        url_img: \"\"\n      }); //depois de adicionado queremos voltar para a nossa lista\n\n      this.props.history.push(\"/admin\");\n    };\n\n    this.changeValues = newValue => {\n      this.setState(newValue);\n    };\n\n    const {\n      id,\n      name,\n      price,\n      size,\n      color,\n      url_img\n    } = props.location.state.produto;\n    this.state = {\n      id: id,\n      name: name,\n      price: price,\n      size: size,\n      color: color,\n      url_img: url_img\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      title: `Atualizar ${this.state.name}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Info Producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(FormProduct, {\n            values: this.state,\n            changeValues: this.changeValues,\n            onSubmit: this.update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EditProduto;","map":{"version":3,"sources":["C:/Users/ADM/Desktop/zip/projetoFakeApi-reactJS (2)/src/componentes/Editproduto.js"],"names":["React","Card","Layout","FormProduct","EditProduto","Component","constructor","props","update","e","preventDefault","state","name","price","alert","updateProduto","setState","size","color","url_img","history","push","changeValues","newValue","id","location","produto","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACxC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,MAfmB,GAeTC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoB,EAApB,IAA0B,KAAKD,KAAL,CAAWE,KAAX,KAAqB,EAAnD,EAAuD;AACrDC,QAAAA,KAAK,CAAC,2CAAD,CAAL;AACA;AACD,OALa,CAMd;;;AACA,WAAKP,KAAL,CAAWQ,aAAX,CAAyB,KAAKJ,KAA9B,EAPc,CASd;;AACA,WAAKK,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,KAAK,EAAE,EAAnB;AAAuBI,QAAAA,IAAI,EAAE,EAA7B;AAAiCC,QAAAA,KAAK,EAAE,EAAxC;AAA4CC,QAAAA,OAAO,EAAE;AAArD,OAAd,EAVc,CAYd;;AACA,WAAKZ,KAAL,CAAWa,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,KA7BkB;;AAAA,SA+BnBC,YA/BmB,GA+BHC,QAAD,IAAc;AAC3B,WAAKP,QAAL,CAAcO,QAAd;AACD,KAjCkB;;AAEjB,UAAM;AAAEC,MAAAA,EAAF;AAAMZ,MAAAA,IAAN;AAAYC,MAAAA,KAAZ;AAAmBI,MAAAA,IAAnB;AAAyBC,MAAAA,KAAzB;AAAgCC,MAAAA;AAAhC,QACJZ,KAAK,CAACkB,QAAN,CAAed,KAAf,CAAqBe,OADvB;AAGA,SAAKf,KAAL,GAAa;AACXa,MAAAA,EAAE,EAAEA,EADO;AAEXZ,MAAAA,IAAI,EAAEA,IAFK;AAGXC,MAAAA,KAAK,EAAEA,KAHI;AAIXI,MAAAA,IAAI,EAAEA,IAJK;AAKXC,MAAAA,KAAK,EAAEA,KALI;AAMXC,MAAAA,OAAO,EAAEA;AANE,KAAb;AAQD;;AAsBDQ,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAG,aAAY,KAAKhB,KAAL,CAAWC,IAAK,EAA5C;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,MAAM,EAAE,KAAKD,KADf;AAEE,YAAA,YAAY,EAAE,KAAKW,YAFrB;AAGE,YAAA,QAAQ,EAAE,KAAKd;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AApDuC;;AAuD1C,eAAeJ,WAAf","sourcesContent":["import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nimport Layout from \"./LayoutAdmin\";\nimport FormProduct from \"./FormProduct\";\n\nclass EditProduto extends React.Component {\n  //criando configuraçoes\n  constructor(props) {\n    super(props);\n    const { id, name, price, size, color, url_img } =\n      props.location.state.produto;\n\n    this.state = {\n      id: id,\n      name: name,\n      price: price,\n      size: size,\n      color: color,\n      url_img: url_img,\n    };\n  }\n\n  update = (e) => {\n    e.preventDefault();\n    if (this.state.name === \"\" || this.state.price === \"\") {\n      alert(\"Os dois primeiros campos são obrigatórios\");\n      return;\n    }\n    //mostrar dados organizados quando adicionado\n    this.props.updateProduto(this.state);\n\n    //limpando informacoes depois de adicionado\n    this.setState({ name: \"\", price: \"\", size: \"\", color: \"\", url_img: \"\" });\n\n    //depois de adicionado queremos voltar para a nossa lista\n    this.props.history.push(\"/admin\");\n  };\n\n  changeValues = (newValue) => {\n    this.setState(newValue);\n  };\n\n  render() {\n    return (\n      <Layout title={`Atualizar ${this.state.name}`}>\n        <Card>\n          <Card.Header>Info Producto</Card.Header>\n          <Card.Body>\n            <FormProduct\n              values={this.state}\n              changeValues={this.changeValues}\n              onSubmit={this.update}\n            />\n          </Card.Body>\n        </Card>\n      </Layout>\n    );\n  }\n}\n\nexport default EditProduto;\n"]},"metadata":{},"sourceType":"module"}