{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADM\\\\Desktop\\\\zip\\\\projetoFakeApi-reactJS (2)\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { uuid } from \"uuidv4\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport api from \"./api/produtos\";\nimport AdicionarProduto from \"./componentes/Addproduto\";\nimport ListaProdutos from \"./componentes/ListProduto\";\nimport ProdutoInfo from \"./componentes/ProdutoInfo\";\nimport EditProduto from \"./componentes/Editproduto\";\nimport HomePage from \"./pages/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [produtos, setProducts] = useState([]); //recuperar produtos da fake api\n\n  const recuperarProduto = async () => {\n    const resposta = await api.get(\"/produtos\");\n    return resposta.data;\n  }; //Cadastro de novos produtos\n\n\n  const novoProduto = async produto => {\n    const request = {\n      id: uuid(),\n      ...produto\n    }; //criando chamadas da api\n\n    const resposta = await api.post(\"/produtos\", request);\n    setProducts([...produtos, resposta.data]);\n  }; //Atualizar produto\n\n\n  const updateProduto = async produto => {\n    const resposta = await api.put(`/produtos/${produto.id}`, produto);\n    const {\n      id,\n      name,\n      price,\n      size,\n      color\n    } = resposta.data;\n    setProducts(produtos.map(produto => {\n      return produto.id === id ? { ...resposta.data\n      } : produto;\n    }));\n  }; //codigo para eliminar algo cadastrado\n\n\n  const deleteProductById = async id => {\n    await api.delete(`/produtos/${id}`);\n    const nvProduto = produtos.filter(produto => {\n      return produto.id !== id;\n    });\n    setProducts(nvProduto);\n  }; //criando efeito de como os dados vÃ£o ser apresentados\n\n\n  useEffect(() => {\n    const getProdutos = async () => {\n      const todosProdutos = await recuperarProduto();\n\n      if (todosProdutos) {\n        setProducts(todosProdutos);\n      }\n    };\n\n    getProdutos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/\",\n          exact: true,\n          render: props => /*#__PURE__*/_jsxDEV(ListaProdutos, { ...props,\n            produtos: produtos,\n            deleteProductById: deleteProductById\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/add\",\n          render: props => /*#__PURE__*/_jsxDEV(AdicionarProduto, { ...props,\n            novoProduto: novoProduto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/edit\",\n          render: props => /*#__PURE__*/_jsxDEV(EditProduto, { ...props,\n            updateProduto: updateProduto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/produto/:id\",\n          component: ProdutoInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(HomePage, {\n            produtos: produtos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PFV8m6K/sM/3JaFop4Dz4JDFwSk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ADM/Desktop/zip/projetoFakeApi-reactJS (2)/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","uuid","api","AdicionarProduto","ListaProdutos","ProdutoInfo","EditProduto","HomePage","App","produtos","setProducts","recuperarProduto","resposta","get","data","novoProduto","produto","request","id","post","updateProduto","put","name","price","size","color","map","deleteProductById","delete","nvProduto","filter","getProdutos","todosProdutos","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { uuid } from \"uuidv4\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nimport api from \"./api/produtos\";\nimport AdicionarProduto from \"./componentes/Addproduto\";\nimport ListaProdutos from \"./componentes/ListProduto\";\nimport ProdutoInfo from \"./componentes/ProdutoInfo\";\nimport EditProduto from \"./componentes/Editproduto\";\nimport HomePage from \"./pages/Home\";\n\nfunction App() {\n  const [produtos, setProducts] = useState([]);\n\n  //recuperar produtos da fake api\n  const recuperarProduto = async () => {\n    const resposta = await api.get(\"/produtos\");\n    return resposta.data;\n  };\n  //Cadastro de novos produtos\n  const novoProduto = async (produto) => {\n    const request = {\n      id: uuid(),\n      ...produto,\n    };\n    //criando chamadas da api\n    const resposta = await api.post(\"/produtos\", request);\n\n    setProducts([...produtos, resposta.data]);\n  };\n\n  //Atualizar produto\n  const updateProduto = async (produto) => {\n    const resposta = await api.put(`/produtos/${produto.id}`, produto);\n\n    const { id, name, price, size, color } = resposta.data;\n\n    setProducts(\n      produtos.map((produto) => {\n        return produto.id === id ? { ...resposta.data } : produto;\n      })\n    );\n  };\n\n  //codigo para eliminar algo cadastrado\n  const deleteProductById = async (id) => {\n    await api.delete(`/produtos/${id}`);\n\n    const nvProduto = produtos.filter((produto) => {\n      return produto.id !== id;\n    });\n    setProducts(nvProduto);\n  };\n\n  //criando efeito de como os dados vÃ£o ser apresentados\n  useEffect(() => {\n    const getProdutos = async () => {\n      const todosProdutos = await recuperarProduto();\n      if (todosProdutos) {\n        setProducts(todosProdutos);\n      }\n    };\n    getProdutos();\n  }, []);  \n\n  return (\n    <div className=\"\">\n      <Router>\n        <Switch>\n          <Route\n            path=\"/admin/\"\n            exact\n            render={(props) => (\n              <ListaProdutos\n                {...props}\n                produtos={produtos}\n                deleteProductById={deleteProductById}\n              />\n            )}\n          />\n          <Route\n            path=\"/admin/add\"\n            render={(props) => (\n              <AdicionarProduto {...props} novoProduto={novoProduto} />\n            )}\n          />\n          <Route\n            path=\"/admin/edit\"\n            render={(props) => (\n              <EditProduto {...props} updateProduto={updateProduto} />\n            )}\n          />\n          <Route path=\"/admin/produto/:id\" component={ProdutoInfo} />\n          <Route path=\"/\" render={() => <HomePage produtos={produtos} />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}